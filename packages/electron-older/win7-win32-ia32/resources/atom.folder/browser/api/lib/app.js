// Generated by CoffeeScript 1.9.3
(function() {
  var EventEmitter, app, appPath, bindings, sessionBindings, wrapSession;

  EventEmitter = require('events').EventEmitter;

  bindings = process.atomBinding('app');

  sessionBindings = process.atomBinding('session');

  app = bindings.app;

  app.__proto__ = EventEmitter.prototype;

  wrapSession = function(session) {
    return session.__proto__ = EventEmitter.prototype;
  };

  app.setApplicationMenu = function(menu) {
    return require('menu').setApplicationMenu(menu);
  };

  app.getApplicationMenu = function() {
    return require('menu').getApplicationMenu();
  };

  app.commandLine = {
    appendSwitch: bindings.appendSwitch,
    appendArgument: bindings.appendArgument
  };

  if (process.platform === 'darwin') {
    app.dock = {
      bounce: function(type) {
        if (type == null) {
          type = 'informational';
        }
        return bindings.dockBounce(type);
      },
      cancelBounce: bindings.dockCancelBounce,
      setBadge: bindings.dockSetBadgeText,
      getBadge: bindings.dockGetBadgeText,
      hide: bindings.dockHide,
      show: bindings.dockShow,
      setMenu: bindings.dockSetMenu
    };
  }

  appPath = null;

  app.setAppPath = function(path) {
    return appPath = path;
  };

  app.getAppPath = function() {
    return appPath;
  };

  app.once('ready', function() {
    return this.emit('finish-launching');
  });

  app.terminate = app.quit;

  app.exit = process.exit;

  app.getHomeDir = function() {
    return this.getPath('home');
  };

  app.getDataPath = function() {
    return this.getPath('userData');
  };

  app.setDataPath = function(path) {
    return this.setPath('userData', path);
  };

  app.resolveProxy = function() {
    return this.defaultSession.resolveProxy.apply(this.defaultSession, arguments);
  };

  sessionBindings._setWrapSession(wrapSession);

  process.once('exit', sessionBindings._clearWrapSession);

  module.exports = app;

}).call(this);
