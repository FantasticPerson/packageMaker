// Generated by CoffeeScript 1.9.3
(function() {
  var Module, Readable, app, e, fs, globalPaths, i, len, mainStartupScript, packageJson, packagePath, path, print, searchPaths, stdin, util,
    slice = [].slice;

  fs = require('fs');

  path = require('path');

  util = require('util');

  Module = require('module');

  process.argv.splice(1, 1);

  globalPaths = Module.globalPaths;

  globalPaths.push(path.resolve(__dirname, '..', 'api', 'lib'));

  require(path.resolve(__dirname, '..', '..', 'common', 'lib', 'init'));

  if (process.platform === 'win32') {
    print = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return process.log(util.format.apply(util, args));
    };
    console.log = console.error = console.warn = print;
    process.stdout.write = process.stderr.write = print;
    Readable = require('stream').Readable;
    stdin = new Readable;
    stdin.push(null);
    process.__defineGetter__('stdin', function() {
      return stdin;
    });
  }

  process.on('uncaughtException', function(error) {
    var message, ref, stack;
    if (process.listeners('uncaughtException').length > 1) {
      return;
    }
    stack = (ref = error.stack) != null ? ref : error.name + ": " + error.message;
    message = "Uncaught Exception:\n" + stack;
    return require('dialog').showErrorBox('A JavaScript error occurred in the main process', message);
  });

  app = require('app');

  app.on('quit', function() {
    return process.emit('exit');
  });

  require('./rpc-server');

  require('./guest-view-manager');

  require('./guest-window-manager');

  packageJson = null;

  searchPaths = ['app', 'app.asar', 'default_app'];

  for (i = 0, len = searchPaths.length; i < len; i++) {
    packagePath = searchPaths[i];
    try {
      packagePath = path.join(process.resourcesPath, packagePath);
      packageJson = JSON.parse(fs.readFileSync(path.join(packagePath, 'package.json')));
      break;
    } catch (_error) {
      e = _error;
      continue;
    }
  }

  if (packageJson == null) {
    throw new Error("Unable to find a valid app");
  }

  if (packageJson.version != null) {
    app.setVersion(packageJson.version);
  }

  if (packageJson.productName != null) {
    app.setName(packageJson.productName);
  } else if (packageJson.name != null) {
    app.setName(packageJson.name);
  }

  if (packageJson.desktopName != null) {
    app.setDesktopName(packageJson.desktopName);
  } else {
    app.setDesktopName((app.getName()) + ".desktop");
  }

  app.commandLine.appendSwitch('enable-npapi');

  app.setPath('userData', path.join(app.getPath('appData'), app.getName()));

  app.setPath('userCache', path.join(app.getPath('cache'), app.getName()));

  app.setAppPath(packagePath);

  require('./chrome-extension');

  mainStartupScript = packageJson.main || 'index.js';

  Module._load(path.join(packagePath, mainStartupScript), Module, true);

}).call(this);
